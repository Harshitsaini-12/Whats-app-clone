{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","Math","floor","random","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2e30c55.chunk.js","sourcesContent":["//config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtDcdmvpaz2KC0T0FK1SnaC8fqjLwh_XA\",\n  authDomain: \"whatsup-ae986.firebaseapp.com\",\n  projectId: \"whatsup-ae986\",\n  storageBucket: \"whatsup-ae986.appspot.com\",\n  messagingSenderId: \"595673859086\",\n  appId: \"1:595673859086:web:7836281c1a00287124285f\",\n  measurementId: \"G-SRXP2HXYMW\"\n};\n\n  const firebaseApp =firebase.initializeApp(firebaseConfig);\n  const db=firebaseApp.firestore();\n  const auth =firebaseApp.auth();\n\n  //for google auth provide.\n  const provider= new firebase.auth.GoogleAuthProvider();\n\n\n  export {auth,provider};\n  export default db;","import React,{useState, useEffect} from 'react'\nimport './SidebarChat.css';\nimport { Avatar} from \"@material-ui/core\";\nimport db from \"./firebase\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction SidebarChat({id,name,addNewChat}) {\n\nconst [seed,setSeed]= useState(\"\");\nconst[messages,setMessages]=useState(\"\");\n\nuseEffect(() => {\n   setSeed(Math.floor(Math.random()*5000));\n}, []);\n\n\n//function for last message\nuseEffect(()=>{\n    if(id){\n        db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot=>(\nsetMessages(snapshot.docs.map((doc)=>doc.data()))\n        ))\n    }\n},[id]);\n\n\n// function for onclick createchat \nconst createChat =()=>{\n    const roomName= prompt(\"Please enter name for chat room\");\n\n\n    if(roomName){\ndb.collection(\"rooms\").add({\n    name:roomName,\n})\n    }\n}\n\n\n    return !addNewChat?(\n        <Link to={`/rooms/${id}`}>\n        <div className=\"sidebarChat\">\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n            <div className=\"sidebarChat_info\">\n                <h2>{name}</h2>\n                <p>{messages[0]?.message}</p>\n            </div>\n        </div>\n        </Link>\n    ):(\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h2>Add new Chat</h2>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","import React ,{createContext,useContext,useReducer} from \"react\";\n\nexport const StateContext=createContext();\n\nexport const StateProvider=({reducer,initialState,children})=>(\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\n\nexport const useStateValue =()=> useContext(StateContext);","import React ,{useState,useEffect} from \"react\";\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport SidebarChat from \"./SidebarChat\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Sidebar() {\n\nconst [rooms,setRooms] =useState([]);\nconst [{user},dispatch] = useStateValue();\n\nuseEffect(() => {\n  const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\n      setRooms(snapshot.docs.map(doc => (\n          {\n              id: doc.id,\n              data: doc.data()\n          }\n      )\n      ))\n  ));\n\n  return () => {\n      unsubscribe();\n  }\n},[]); \n\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar_header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar_headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar_searchContainer\">\n          <SearchOutlined />\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"sidebar_chats\">\n          <SidebarChat addNewChat/>\n         {rooms.map(room=>(\n           <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\n         ))}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, SearchOutlined } from \"@material-ui/icons\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  //use effect to load messages in particular room\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => {\n          setRoomName(snapshot.data().name);\n\n          db.collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n            .onSnapshot((snapshot) =>\n              setMessages(snapshot.docs.map((doc) => doc.data()))\n            );\n        });\n    }\n  }, [roomId]);\n\n  //for creating random images on click\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log(\"you typed the output\", input);\n\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat_header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\n        <div className=\"chat_headerInfo\">\n          <h3>{roomName}</h3>\n          <p>Last seen{\"\"}{\n            \n            new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()\n            \n          }</p>\n        </div>\n\n        <div className=\"chat_headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"chat_body\">\n        {messages.map((message) => (\n          <p className={`chat_message ${message.name=== user.displayName && \"chat_reciever\"}`}>\n            <span className=\"chat_name\">{message.name}</span>\n            {message.message}\n            <span className=\"chat_timestamp\">\n              {new Date(message.timestamp?.toDate()).toUTCString()}\n            </span>\n          </p>\n        ))}\n      </div>\n\n      <div className=\"chat_footer\">\n        <IconButton>\n          <InsertEmoticonIcon />\n        </IconButton>\n        <form>\n          <input\n            value={input}\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}\n            type=\"text\"\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage} type=\"submit\">\n            Send a message.\n          </button>\n        </form>\n        <IconButton>\n          <MicIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","export const initialState = {\n  user: null,\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport {actionTypes} from \"./reducer\";\n\nfunction Login() {\n\n  const [{},dispatch] =useStateValue();\n  //function for google login\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type:actionTypes.SET_USER,\n          user:result.user,\n        })\n        console.log(result);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login_container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\"\n          alt=\"whatsup logo\"\n        />\n        <div className=\"login_text\">\n          <h1>Sign in to WhatsApp</h1>\n        </div>\n\n        <Button onClick={signIn}>Sign In With Google</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React,{useState} from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router,Switch,Route } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n\nconst [{user},dispatch]=useStateValue();\n\n\n\n  return (\n    \n    <div className=\"App\">\n      \n      {!user? (\n        <Login/>\n      ):(\n        <div className=\"app_body\">\n        <Router>\n        <Sidebar />\n          <Switch>\n          \n           <Route path=\"/rooms/:roomId\">\n            <Chat />\n          </Route>\n          \n          <Route path=\"/\">\n           <Chat/>\n          </Route>\n\n          </Switch>\n        </Router>\n      </div>\n   \n      )}\n      </div>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState={initialState}\n  reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}